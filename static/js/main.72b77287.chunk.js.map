{"version":3,"sources":["components/spinner/Spin.svg","components/spinner/Spinner.js","components/appHeader/AppHeader.js","components/app/App.js","index.js"],"names":["Spinner","className","src","spinner","alt","AppHeader","to","end","style","color","isActive","Page404","lazy","MainPage","ComicsPage","SingleComicLayout","SingleCharLayout","SinglePage","App","fallback","path","element","Component","dataType","ReactDOM","createRoot","document","getElementById","render"],"mappings":"iGAAe,UAA0B,iC,eCW1BA,IARC,WACZ,OACI,qBAAKC,UAAU,sBAAf,SACI,qBAAKC,IAAKC,EAASC,IAAI,qB,+JC+BpBC,EAlCG,WACd,OACI,yBAAQJ,UAAU,cAAlB,UACI,oBAAIA,UAAU,aAAd,SACI,eAAC,IAAD,CAAMK,GAAG,IAAT,UACI,0CADJ,2BAIJ,qBAAKL,UAAU,YAAf,SACI,+BACI,6BACI,cAAC,IAAD,CACIM,KAAG,EACHD,GAAG,IACHE,MAAO,kBAAmB,CAAEC,MAArB,EAAGC,SAAoC,UAAY,UAH9D,0BAFR,IAWI,6BACI,cAAC,IAAD,CACIJ,GAAG,UACHE,MAAO,kBAAmB,CAAEC,MAArB,EAAGC,SAAoC,UAAY,UAF9D,+B,QCjBlBC,EAAUC,gBAAK,kBAAM,iCACrBC,EAAWD,gBAAK,kBAAM,8DACtBE,EAAaF,gBAAK,kBAAM,8DACxBG,EAAoBH,gBAAK,kBAAM,wDAC/BI,EAAmBJ,gBAAK,kBAAM,wDAC9BK,EAAaL,gBAAK,kBAAM,uDAkCfM,EAhCH,WACR,OACI,cAAC,IAAD,UACI,sBAAKjB,UAAU,MAAf,UACI,cAAC,EAAD,IACA,+BAEI,cAAC,WAAD,CAAUkB,SAAU,cAACnB,EAAA,EAAD,IAApB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOoB,KAAK,IAAIC,QAAS,cAACR,EAAD,MACzB,cAAC,IAAD,CAAOO,KAAK,UAAUC,QAAS,cAACP,EAAD,MAC/B,cAAC,IAAD,CACIM,KAAK,cACLC,QACI,cAACJ,EAAD,CAAYK,UAAWP,EAAmBQ,SAAS,YAG3D,cAAC,IAAD,CACIH,KAAK,kBACLC,QACI,cAACJ,EAAD,CAAYK,UAAWN,EAAkBO,SAAS,gBAG1D,cAAC,IAAD,CAAOH,KAAK,IAAIC,QAAS,cAACV,EAAD,mB,MC/BxCa,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,O","file":"static/js/main.72b77287.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Spin.b732871a.svg\";","import spinner from \"./Spin.svg\";\r\nimport \"./spinner.scss\";\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"randomchar__spinner\">\r\n            <img src={spinner} alt=\"wait spinner\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import { Link, NavLink } from \"react-router-dom\";\r\nimport \"./appHeader.scss\";\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <header className=\"app__header\">\r\n            <h1 className=\"app__title\">\r\n                <Link to=\"/\">\r\n                    <span>Marvel</span> information portal\r\n                </Link>\r\n            </h1>\r\n            <nav className=\"app__menu\">\r\n                <ul>\r\n                    <li>\r\n                        <NavLink\r\n                            end // end - строгое сравнение строк на путь к переходу страницы\r\n                            to=\"/\"\r\n                            style={({ isActive }) => ({ color: isActive ? \"#9f0013\" : \"black\" })}\r\n                        >\r\n                            Characters\r\n                        </NavLink>\r\n                    </li>\r\n                    /\r\n                    <li>\r\n                        <NavLink\r\n                            to=\"/comics\"\r\n                            style={({ isActive }) => ({ color: isActive ? \"#9f0013\" : \"black\" })}\r\n                        >\r\n                            Comics\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default AppHeader;\r\n","import { lazy, Suspense } from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\n\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\nimport Spinner from \"../spinner/Spinner\";\r\n\r\n// Динамические импорты, lazy components ( подключаются после основных )\r\nconst Page404 = lazy(() => import(\"../pages/404\"));\r\nconst MainPage = lazy(() => import(\"../pages/MainPage\"));\r\nconst ComicsPage = lazy(() => import(\"../pages/ComicsPage\"));\r\nconst SingleComicLayout = lazy(() => import(\"../pages/singleComicLayout/SingleComicLayout\"));\r\nconst SingleCharLayout = lazy(() => import(\"../pages/singleCharLayout/SingleCharLayout\"));\r\nconst SinglePage = lazy(() => import(\"../pages/SinglePage\"));\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"app\">\r\n                <AppHeader />\r\n                <main>\r\n                    {/* при переходах между страницами (при медлен загрузке) будет появл-ся спинер  (fallback - Spinner)*/}\r\n                    <Suspense fallback={<Spinner />}>\r\n                        <Routes>\r\n                            <Route path=\"/\" element={<MainPage />} />\r\n                            <Route path=\"/comics\" element={<ComicsPage />} />\r\n                            <Route\r\n                                path=\"/comics/:id\"\r\n                                element={\r\n                                    <SinglePage Component={SingleComicLayout} dataType=\"comic\" />\r\n                                }\r\n                            />\r\n                            <Route\r\n                                path=\"/characters/:id\"\r\n                                element={\r\n                                    <SinglePage Component={SingleCharLayout} dataType=\"character\" />\r\n                                }\r\n                            />\r\n                            <Route path=\"*\" element={<Page404 />} />\r\n                        </Routes>\r\n                    </Suspense>\r\n                </main>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./components/app/App\";\r\n\r\nimport \"./style/style.scss\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}