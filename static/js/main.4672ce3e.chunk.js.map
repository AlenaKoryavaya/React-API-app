{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","components/spinner/Spin.svg","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getSource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","src","spinner","alt","ErrorMessage","error","RandomChar","state","loading","marvelService","componentDidMount","updateChar","onCharLoaded","setState","onLoading","onError","Math","floor","random","then","catch","this","errorMessage","content","onClick","mjolnir","Component","View","style","objectFit","rel","target","CharList","charList","selectedChar","newItemsLoading","charEnded","onReguest","onCharListLoading","onCharsLoaded","newCharList","ended","length","onCharSelected","i","props","displayChars","elements","item","styleSelectedImg","styleImgFormat","tabIndex","onKeyDown","e","key","list","disabled","display","Skeleton","CharInfo","charId","prevProps","skeleton","imgStyle","resourceURI","ErrorBoundary","errorInfo","console","log","children","App","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4672ce3e.chunk.js","sourcesContent":["import \"./appHeader.scss\";\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"/\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li>\n                        <a href=\"/\">Characters</a>\n                    </li>\n                    /\n                    <li>\n                        <a href=\"/\">Comics</a>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    );\n};\n\nexport default AppHeader;\n","class MarvelService {\r\n    _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n    _apiKey = \"apikey=7bb779595667b5381fd0ca5c8939611b\";\r\n    _baseOffset = 210;\r\n\r\n    getSource = async (url) => {\r\n        const res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    };\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getSource(\r\n            `${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`\r\n        );\r\n        return res.data.results.map(this._transformCharacter);\r\n    };\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getSource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    };\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description\r\n                ? `${char.description.slice(0, 210)}...`\r\n                : \"The character description is missing\",\r\n            thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items,\r\n        };\r\n    };\r\n}\r\n\r\nexport default MarvelService;\r\n","export default __webpack_public_path__ + \"static/media/Spin.2d7976fd.svg\";","import spinner from \"./Spin.svg\";\r\nimport \"./spinner.scss\";\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"randomchar__spinner\">\r\n            <img src={spinner} alt=\"wait spinner\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import error from \"./error.gif\";\r\nimport \"./errorMessage.scss\";\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <div className=\"randomchar__error\">\r\n            <img src={error} alt=\"error\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from \"react\";\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\n\nclass RandomChar extends Component {\n    // синтаксис полей классов\n    state = {\n        char: {},\n        loading: true,\n        error: false,\n    };\n\n    // создаем экземпляр класса\n    marvelService = new MarvelService();\n\n    componentDidMount = () => {\n        this.updateChar();\n    };\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char, // char: char,\n            loading: false,\n        });\n    };\n\n    onLoading = () => {\n        this.setState({\n            loading: true,\n        });\n    };\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true,\n        });\n    };\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onLoading();\n        // в then уже будет параметр res, кот передасться в onCharLoaded как char\n        this.marvelService.getCharacter(id).then(this.onCharLoaded).catch(this.onError);\n    };\n\n    render() {\n        const { char, loading, error } = this.state;\n        const spinner = loading ? <Spinner /> : null;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const content = !(spinner || errorMessage) ? <View char={char} /> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {/* Если в перем null, то на странице ничего не отрендерится */}\n                {spinner}\n                {errorMessage}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!\n                        <br />\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">Or choose another one</p>\n                    <button className=\"button button__main\">\n                        <div className=\"inner\" onClick={this.componentDidMount}>\n                            try it\n                        </div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n                </div>\n            </div>\n        );\n    }\n}\n\n// Просто рендарищийся компонент без логики\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki } = char;\n\n    let style = { objectFit: \"cover\" };\n\n    if (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n        style = { objectFit: \"fill\" };\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={style} />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">{description}</p>\n                <div className=\"randomchar__btns\">\n                    <a\n                        href={homepage}\n                        rel=\"noreferrer\"\n                        className=\"button button__main\"\n                        target=\"_blank\"\n                    >\n                        <div className=\"inner\">Homepage</div>\n                    </a>\n                    <a\n                        href={wiki}\n                        rel=\"noreferrer\"\n                        className=\"button button__secondary\"\n                        target=\"_blank\"\n                    >\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default RandomChar;\n","import { Component } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport MarvelService from \"../../services/MarvelService\";\nimport PropTypes from \"prop-types\";\n\nimport \"./charList.scss\";\n\nclass CharList extends Component {\n    // синтаксис полей классов\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        selectedChar: null,\n        newItemsLoading: false,\n        offset: 210,\n        charEnded: false,\n    };\n\n    // создаем экземпляр класса\n    marvelService = new MarvelService();\n\n    componentDidMount = () => {\n        this.onReguest();\n    };\n\n    onReguest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset).then(this.onCharsLoaded).catch(this.onError);\n    };\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemsLoading: true,\n        });\n    };\n\n    onCharsLoaded = (newCharList) => {\n        // проверяем, не закончились ли еще персонажи от сервера\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({ charList, offset }) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemsLoading: false,\n            offset: offset + 9,\n            charEnded: ended,\n        }));\n    };\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true,\n        });\n    };\n\n    onCharSelected = (id, i) => {\n        this.setState({\n            selectedChar: i,\n        });\n\n        this.props.onCharSelected(id);\n    };\n\n    displayChars = (charList) => {\n        const elements = charList.map((item, i) => {\n            const { id, name, thumbnail } = item;\n            // Добавляем красную тень выбранному персонажу\n            const styleSelectedImg =\n                i === this.state.selectedChar ? \"char__item char__item_selected\" : \"char__item\";\n            // Корректируем формат картинки (not found)\n            let styleImgFormat = { objectFit: \"cover\" };\n            if (\n                thumbnail ===\n                    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ||\n                thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif\"\n            ) {\n                styleImgFormat = { objectFit: \"fill\" };\n            }\n\n            return (\n                <li\n                    className={styleSelectedImg}\n                    key={id}\n                    tabIndex={0}\n                    onClick={() => this.onCharSelected(id, i)}\n                    onKeyDown={(e) => {\n                        if (e.key === \" \" || e.key === \"Enter\") {\n                            this.onCharSelected(id, i);\n                        }\n                    }}\n                >\n                    <img src={thumbnail} alt={name} style={styleImgFormat} />\n                    <div className=\"char__name\">{name}</div>\n                </li>\n            );\n        });\n\n        return <ul className=\"char__grid\">{elements}</ul>;\n    };\n\n    render() {\n        const { charList, loading, error, newItemsLoading, offset, charEnded } = this.state;\n        const spinner = loading ? <Spinner /> : null;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const list = !(loading || error) ? this.displayChars(charList) : null;\n\n        return (\n            <div className=\"char__list\">\n                {list}\n                {spinner}\n                {errorMessage}\n                <button\n                    className=\"button button__main button__long\"\n                    disabled={newItemsLoading}\n                    // убираем кнопку если персонажи закончились (style)\n                    style={{ display: charEnded ? \"none\" : \"block\" }}\n                    onClick={() => this.onReguest(offset)}\n                >\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        );\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from \"react\";\n\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Skeleton from \"../skeleton/Skeleton\";\n\nimport \"./charInfo.scss\";\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false,\n    };\n\n    // создаем экземпляр объекта\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        // важно! не забыть сравнить пропсы перед обновлением\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char, // char: char,\n            loading: false,\n        });\n    };\n\n    onLoading = () => {\n        this.setState({\n            loading: true,\n        });\n    };\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true,\n        });\n    };\n\n    updateChar = () => {\n        const { charId } = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.onLoading();\n        this.marvelService.getCharacter(charId).then(this.onCharLoaded).catch(this.onError);\n    };\n\n    render() {\n        const { char, loading, error } = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton />;\n        const spinner = loading ? <Spinner /> : null;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {spinner}\n                {errorMessage}\n                {content}\n            </div>\n        );\n    }\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki, comics } = char;\n\n    const comicsList = () => {\n        if (comics.length === 0) {\n            return <li>There are no comics with this character</li>;\n        } else {\n            let comicsList = comics.map((item, i) => {\n                return (\n                    <li className=\"char__comics-item\" key={i}>\n                        <a\n                            href={`${item.resourceURI}?apikey=7bb779595667b5381fd0ca5c8939611b`}\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                        >\n                            {item.name}\n                        </a>\n                    </li>\n                );\n            });\n            return comicsList.slice(0, 10);\n        }\n    };\n\n    let imgStyle = { objectFit: \"cover\" };\n\n    if (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n        imgStyle = { objectFit: \"fill\" };\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a\n                            href={homepage}\n                            className=\"button button__main\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                        >\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a\n                            href={wiki}\n                            className=\"button button__secondary\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                        >\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">{description}</div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">{comicsList()}</ul>\n        </>\n    );\n};\n\nexport default CharInfo;\n","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\n// Предохранитель\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false,\r\n    };\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage />;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from \"../../resources/img/vision.png\";\n\nclass App extends Component {\n    state = {\n        selectedChar: null,\n    };\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id,\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader />\n                <main>\n                    <RandomChar />\n                    <div className=\"char__content\">\n                        <CharList onCharSelected={this.onCharSelected} />\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar} />\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/App\";\n\nimport \"./style/style.scss\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}