{"version":3,"sources":["components/pages/SinglePage.js","components/skeleton/Skeleton.js","utils/setContent.js"],"names":["SinglePage","Component","dataType","id","useParams","useState","data","setData","useMarvelService","process","setProcess","clearError","getComic","getCharacterById","useEffect","updateData","then","onDataLoaded","setContent","Skeleton","className","Spinner","ErrorMessage","Error"],"mappings":"iKA6CeA,UAtCI,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SACrBC,EAAOC,cAAPD,GACR,EAAwBE,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwEC,cAAhEC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAAYC,EAA7B,EAA6BA,WAAYC,EAAzC,EAAyCA,SAAUC,EAAnD,EAAmDA,iBAEnDC,qBAAU,WACNC,MACD,CAACZ,IAEJ,IAAMY,EAAa,WAGf,OAFAJ,IAEQT,GACJ,IAAK,QACDU,EAAST,GACJa,KAAKC,GACLD,MAAK,kBAAMN,EAAW,gBAC3B,MACJ,IAAK,YACDG,EAAiBV,GACZa,KAAKC,GACLD,MAAK,kBAAMN,EAAW,kBAKjCO,EAAe,SAACX,GAClBC,EAAQD,IAGZ,OACI,qCACI,cAAC,IAAD,IACCY,YAAWT,EAASR,EAAWK,Q,iDCrB7Ba,EAjBE,WACb,OACI,qCACI,mBAAGC,UAAU,eAAb,0DACA,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,iC,gBCMhBF,IAfI,SAACT,EAASR,EAAWK,GACpC,OAAQG,GACJ,IAAK,UACD,OAAO,cAAC,EAAD,IACX,IAAK,UACD,OAAO,cAACY,EAAA,EAAD,IACX,IAAK,YACD,OAAO,cAACpB,EAAD,CAAWK,KAAMA,IAC5B,IAAK,QACD,OAAO,cAACgB,EAAA,EAAD,IACX,QACI,MAAM,IAAIC,MAAM,+B","file":"static/js/9.fea99436.chunk.js","sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport setContent from \"../../utils/setContent\";\r\n\r\nconst SinglePage = ({ Component, dataType }) => {\r\n    const { id } = useParams();\r\n    const [data, setData] = useState(null);\r\n    const { process, setProcess, clearError, getComic, getCharacterById } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateData();\r\n    }, [id]);\r\n\r\n    const updateData = () => {\r\n        clearError();\r\n\r\n        switch (dataType) {\r\n            case \"comic\":\r\n                getComic(id)\r\n                    .then(onDataLoaded)\r\n                    .then(() => setProcess(\"confirmed\"));\r\n                break;\r\n            case \"character\":\r\n                getCharacterById(id)\r\n                    .then(onDataLoaded)\r\n                    .then(() => setProcess(\"confirmed\"));\r\n                break;\r\n        }\r\n    };\r\n\r\n    const onDataLoaded = (data) => {\r\n        setData(data);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            {setContent(process, Component, data)}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SinglePage;\r\n","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import Skeleton from \"../components/skeleton/Skeleton\";\r\nimport Spinner from \"../components/spinner/Spinner\";\r\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\";\r\n\r\nconst setContent = (process, Component, data) => {\r\n    switch (process) {\r\n        case \"waiting\":\r\n            return <Skeleton />;\r\n        case \"loading\":\r\n            return <Spinner />;\r\n        case \"confirmed\":\r\n            return <Component data={data} />;\r\n        case \"error\":\r\n            return <ErrorMessage />;\r\n        default:\r\n            throw new Error(\"Unexpected process state\");\r\n    }\r\n};\r\n\r\nexport default setContent;\r\n"],"sourceRoot":""}