{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/regenerator-runtime/runtime.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["ErrorMessage","className","src","error","alt","useMarvelService","useState","process","setProcess","request","useCallback","url","a","method","body","headers","fetch","res","ok","Error","status","json","data","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","results","map","_transformCharacter","getCharacterById","id","getCharacterByName","name","getAllComics","_transformComics","getComic","char","checkLinks","arrLinks","linkName","item","filter","type","description","thumbnail","path","extension","homepage","urls","wiki","comiclink","comics","items","title","pages","pageCount","language","textObjects","price","prices","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","AppBanner","avengers","avengersLogo"],"mappings":"uHAAe,UAA0B,kC,eCW1BA,IARM,WACjB,OACI,qBAAKC,UAAU,oBAAf,SACI,qBAAKC,IAAKC,EAAOC,IAAI,c,2ECyElBC,IA7EU,WACrB,MCDmB,WAEnB,MAA8BC,mBAAS,WAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAUC,sBAAW,uCAEvB,WACIC,GADJ,mCAAAC,EAAA,6DAEIC,EAFJ,+BAEa,MACTC,EAHJ,+BAGW,KACPC,EAJJ,+BAIc,CAAE,eAAgB,oBAG5BP,EAAW,WAPf,kBAU0BQ,MAAML,EAAK,CAAEE,SAAQC,OAAMC,YAVrD,WAUcE,EAVd,QAYiBC,GAZjB,uBAakB,IAAIC,MAAJ,0BAA6BR,EAA7B,qBAA6CM,EAAIG,SAbnE,yBAgB2BH,EAAII,OAhB/B,eAgBcC,EAhBd,yBAkBeA,GAlBf,uGAFuB,sDA0BvB,IAIEC,EAAab,uBAAY,WAC3BF,EAAW,aACZ,IAEH,MAAO,CAAED,UAASC,aAAYC,UAASc,cDrCcC,GAA7CjB,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAAYC,EAA7B,EAA6BA,QAASc,EAAtC,EAAsCA,WAEhCE,EAAW,4CACXC,EAAU,0CAGVC,EAAgB,uCAAG,0CAAAf,EAAA,6DAAOgB,EAAP,+BAFL,EAEK,SACHnB,EAAQ,GAAD,OAAIgB,EAAJ,qCAAyCG,EAAzC,YAAmDF,IADvD,cACfT,EADe,yBAEdA,EAAIK,KAAKO,QAAQC,IAAIC,IAFP,2CAAH,qDAKhBC,EAAgB,uCAAG,WAAOC,GAAP,eAAArB,EAAA,sEACHH,EAAQ,GAAD,OAAIgB,EAAJ,sBAA0BQ,EAA1B,YAAgCP,IADpC,cACfT,EADe,yBAEdc,EAAoBd,EAAIK,KAAKO,QAAQ,KAFvB,2CAAH,sDAKhBK,EAAkB,uCAAG,WAAOC,GAAP,eAAAvB,EAAA,sEACLH,EAAQ,GAAD,OAAIgB,EAAJ,2BAA+BU,EAA/B,YAAuCT,IADzC,cACjBT,EADiB,yBAEhBA,EAAIK,KAAKO,QAAQC,IAAIC,IAFL,2CAAH,sDAKlBK,EAAY,uCAAG,0CAAAxB,EAAA,6DAAOgB,EAAP,+BAjBD,EAiBC,SACCnB,EAAQ,GAAD,OAAIgB,EAAJ,iCAAqCG,EAArC,YAA+CF,IADvD,cACXT,EADW,yBAEVA,EAAIK,KAAKO,QAAQC,IAAIO,IAFX,2CAAH,qDAKZC,EAAQ,uCAAG,WAAOL,GAAP,eAAArB,EAAA,sEACKH,EAAQ,GAAD,OAAIgB,EAAJ,kBAAsBQ,EAAtB,YAA4BP,IADxC,cACPT,EADO,yBAENoB,EAAiBpB,EAAIK,KAAKO,QAAQ,KAF5B,2CAAH,sDAKRE,EAAsB,SAACQ,GACzB,IAAMC,EAAa,SAACC,EAAUC,GAC1B,IAAMC,EAAOF,EAASG,QAAO,SAACD,GAAD,OAAUA,EAAKE,OAASH,KACrD,OAAQC,EAAK,GAAYA,EAAK,GAAGhC,IAAf,MAGtB,MAAO,CACHsB,GAAIM,EAAKN,GACTE,KAAMI,EAAKJ,KACXW,YAAaP,EAAKO,YAClBC,UAAWR,EAAKQ,UAAUC,KAAO,IAAMT,EAAKQ,UAAUE,UACtDC,SAAUV,EAAWD,EAAKY,KAAM,UAChCC,KAAMZ,EAAWD,EAAKY,KAAM,QAC5BE,UAAWb,EAAWD,EAAKY,KAAM,aACjCG,OAAQf,EAAKe,OAAOC,QAItBlB,EAAmB,SAACiB,GACtB,MAAO,CACHrB,GAAIqB,EAAOrB,GACXE,KAAMmB,EAAOE,MACbV,YAAcQ,EAAOR,YAEfQ,EAAOR,YADP,uCAENW,MAAOH,EAAOI,UACdC,SAAUL,EAAOM,YAAYD,UAAY,QACzCE,MAAQP,EAAOQ,OAAOD,MAA0BP,EAAOQ,OAAOD,MAAhC,gBAC9Bd,UAAWO,EAAOP,UAAUC,KAAO,IAAMM,EAAOP,UAAUE,UAC1DtC,IAAK2C,EAAOH,KAAK,GAAGxC,MAI5B,MAAO,CACHJ,UACAC,aACAe,aACAI,mBACAK,mBACAE,qBACAE,eACAE,c,wCE3ERyB,EAAOC,QAAU,EAAQ,K,gCCAzB,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOvE,GAEP,YADAiE,EAAOjE,GAILsE,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,GAIxB,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,GAGnEhB,OAAMiB,OA/BZ,mC,mBCOA,IAAIC,EAAW,SAAUvB,GACvB,aAEA,IAEIsB,EAFAE,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eAEZC,EAA4B,oBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAOC,EAAK/B,EAAKG,GAOxB,OANAe,OAAOc,eAAeD,EAAK/B,EAAK,CAC9BG,MAAOA,EACP8B,YAAY,EACZC,cAAc,EACdC,UAAU,IAELJ,EAAI/B,GAEb,IAEE8B,EAAO,GAAI,IACX,MAAOhB,GACPgB,EAAS,SAASC,EAAK/B,EAAKG,GAC1B,OAAO4B,EAAI/B,GAAOG,GAItB,SAASiC,EAAKC,EAASC,EAAS7B,EAAM8B,GAEpC,IAAIC,EAAiBF,GAAWA,EAAQnB,qBAAqBsB,EAAYH,EAAUG,EAC/EC,EAAYxB,OAAOyB,OAAOH,EAAerB,WACzCyB,EAAU,IAAIC,EAAQN,GAAe,IAMzC,OAFAG,EAAUI,QAuMZ,SAA0BT,EAAS5B,EAAMmC,GACvC,IAAIG,EAAQC,EAEZ,OAAO,SAAgB1G,EAAQ2D,GAC7B,GAAI8C,IAAUE,EACZ,MAAM,IAAIrG,MAAM,gCAGlB,GAAImG,IAAUG,EAAmB,CAC/B,GAAe,UAAX5G,EACF,MAAM2D,EAKR,OAAOkD,IAMT,IAHAP,EAAQtG,OAASA,EACjBsG,EAAQ3C,IAAMA,IAED,CACX,IAAImD,EAAWR,EAAQQ,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUR,GACnD,GAAIS,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBT,EAAQtG,OAGVsG,EAAQY,KAAOZ,EAAQa,MAAQb,EAAQ3C,SAElC,GAAuB,UAAnB2C,EAAQtG,OAAoB,CACrC,GAAIyG,IAAUC,EAEZ,MADAD,EAAQG,EACFN,EAAQ3C,IAGhB2C,EAAQc,kBAAkBd,EAAQ3C,SAEN,WAAnB2C,EAAQtG,QACjBsG,EAAQe,OAAO,SAAUf,EAAQ3C,KAGnC8C,EAAQE,EAER,IAAIW,EAASC,EAASxB,EAAS5B,EAAMmC,GACrC,GAAoB,WAAhBgB,EAAOtF,KAAmB,CAO5B,GAJAyE,EAAQH,EAAQxC,KACZ8C,EACAY,EAEAF,EAAO3D,MAAQsD,EACjB,SAGF,MAAO,CACLpD,MAAOyD,EAAO3D,IACdG,KAAMwC,EAAQxC,MAGS,UAAhBwD,EAAOtF,OAChByE,EAAQG,EAGRN,EAAQtG,OAAS,QACjBsG,EAAQ3C,IAAM2D,EAAO3D,OA/QP8D,CAAiB1B,EAAS5B,EAAMmC,GAE7CF,EAcT,SAASmB,EAASrD,EAAIuB,EAAK9B,GACzB,IACE,MAAO,CAAE3B,KAAM,SAAU2B,IAAKO,EAAGwD,KAAKjC,EAAK9B,IAC3C,MAAOa,GACP,MAAO,CAAExC,KAAM,QAAS2B,IAAKa,IAhBjCrB,EAAQ2C,KAAOA,EAoBf,IAAIY,EAAyB,iBACzBc,EAAyB,iBACzBb,EAAoB,YACpBC,EAAoB,YAIpBK,EAAmB,GAMvB,SAASd,KACT,SAASwB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBrC,EAAOqC,EAAmB3C,GAAgB,WACxC,OAAOd,QAGT,IAAI0D,EAAWlD,OAAOmD,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BrD,GAC5BG,EAAO4C,KAAKM,EAAyB9C,KAGvC2C,EAAoBG,GAGtB,IAAIE,EAAKN,EAA2B/C,UAClCsB,EAAUtB,UAAYD,OAAOyB,OAAOwB,GAYtC,SAASM,EAAsBtD,GAC7B,CAAC,OAAQ,QAAS,UAAUuD,SAAQ,SAASpI,GAC3CwF,EAAOX,EAAW7E,GAAQ,SAAS2D,GACjC,OAAOS,KAAKoC,QAAQxG,EAAQ2D,SAkClC,SAAS0E,EAAcjC,EAAWkC,GAChC,SAASC,EAAOvI,EAAQ2D,EAAKL,EAASC,GACpC,IAAI+D,EAASC,EAASnB,EAAUpG,GAASoG,EAAWzC,GACpD,GAAoB,UAAhB2D,EAAOtF,KAEJ,CACL,IAAIwG,EAASlB,EAAO3D,IAChBE,EAAQ2E,EAAO3E,MACnB,OAAIA,GACiB,kBAAVA,GACPiB,EAAO4C,KAAK7D,EAAO,WACdyE,EAAYhF,QAAQO,EAAM4E,SAASzE,MAAK,SAASH,GACtD0E,EAAO,OAAQ1E,EAAOP,EAASC,MAC9B,SAASiB,GACV+D,EAAO,QAAS/D,EAAKlB,EAASC,MAI3B+E,EAAYhF,QAAQO,GAAOG,MAAK,SAAS0E,GAI9CF,EAAO3E,MAAQ6E,EACfpF,EAAQkF,MACP,SAASlJ,GAGV,OAAOiJ,EAAO,QAASjJ,EAAOgE,EAASC,MAvBzCA,EAAO+D,EAAO3D,KA4BlB,IAAIgF,EAgCJvE,KAAKoC,QA9BL,SAAiBxG,EAAQ2D,GACvB,SAASiF,IACP,OAAO,IAAIN,GAAY,SAAShF,EAASC,GACvCgF,EAAOvI,EAAQ2D,EAAKL,EAASC,MAIjC,OAAOoF,EAaLA,EAAkBA,EAAgB3E,KAChC4E,EAGAA,GACEA,KAkHV,SAAS5B,EAAoBF,EAAUR,GACrC,IAAItG,EAAS8G,EAAS3B,SAASmB,EAAQtG,QACvC,GAAIA,IAAWyE,EAAW,CAKxB,GAFA6B,EAAQQ,SAAW,KAEI,UAAnBR,EAAQtG,OAAoB,CAE9B,GAAI8G,EAAS3B,SAAT,SAGFmB,EAAQtG,OAAS,SACjBsG,EAAQ3C,IAAMc,EACduC,EAAoBF,EAAUR,GAEP,UAAnBA,EAAQtG,QAGV,OAAOiH,EAIXX,EAAQtG,OAAS,QACjBsG,EAAQ3C,IAAM,IAAIkF,UAChB,kDAGJ,OAAO5B,EAGT,IAAIK,EAASC,EAASvH,EAAQ8G,EAAS3B,SAAUmB,EAAQ3C,KAEzD,GAAoB,UAAhB2D,EAAOtF,KAIT,OAHAsE,EAAQtG,OAAS,QACjBsG,EAAQ3C,IAAM2D,EAAO3D,IACrB2C,EAAQQ,SAAW,KACZG,EAGT,IAAIrD,EAAO0D,EAAO3D,IAElB,OAAMC,EAOFA,EAAKE,MAGPwC,EAAQQ,EAASgC,YAAclF,EAAKC,MAGpCyC,EAAQyC,KAAOjC,EAASkC,QAQD,WAAnB1C,EAAQtG,SACVsG,EAAQtG,OAAS,OACjBsG,EAAQ3C,IAAMc,GAUlB6B,EAAQQ,SAAW,KACZG,GANErD,GA3BP0C,EAAQtG,OAAS,QACjBsG,EAAQ3C,IAAM,IAAIkF,UAAU,oCAC5BvC,EAAQQ,SAAW,KACZG,GAoDX,SAASgC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB9E,KAAKoF,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAI7B,EAAS6B,EAAMQ,YAAc,GACjCrC,EAAOtF,KAAO,gBACPsF,EAAO3D,IACdwF,EAAMQ,WAAarC,EAGrB,SAASf,EAAQN,GAIf7B,KAAKoF,WAAa,CAAC,CAAEJ,OAAQ,SAC7BnD,EAAYmC,QAAQa,EAAc7E,MAClCA,KAAKwF,OAAM,GA8Bb,SAAS3B,EAAO4B,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAS3E,GAC9B,GAAI4E,EACF,OAAOA,EAAepC,KAAKmC,GAG7B,GAA6B,oBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAASG,QAAS,CAC3B,IAAIC,GAAK,EAAGlB,EAAO,SAASA,IAC1B,OAASkB,EAAIJ,EAASG,QACpB,GAAIlF,EAAO4C,KAAKmC,EAAUI,GAGxB,OAFAlB,EAAKlF,MAAQgG,EAASI,GACtBlB,EAAKjF,MAAO,EACLiF,EAOX,OAHAA,EAAKlF,MAAQY,EACbsE,EAAKjF,MAAO,EAELiF,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMlC,GAIjB,SAASA,IACP,MAAO,CAAEhD,MAAOY,EAAWX,MAAM,GA+MnC,OA7mBA6D,EAAkB9C,UAAY+C,EAC9BpC,EAAO0C,EAAI,cAAeN,GAC1BpC,EAAOoC,EAA4B,cAAeD,GAClDA,EAAkBuC,YAAc1E,EAC9BoC,EACAtC,EACA,qBAaFnC,EAAQgH,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,oBAAXD,GAAyBA,EAAOE,YAClD,QAAOD,IACHA,IAAS1C,GAG2B,uBAAnC0C,EAAKH,aAAeG,EAAK/I,QAIhC6B,EAAQoH,KAAO,SAASH,GAQtB,OAPIxF,OAAO4F,eACT5F,OAAO4F,eAAeJ,EAAQxC,IAE9BwC,EAAOK,UAAY7C,EACnBpC,EAAO4E,EAAQ9E,EAAmB,sBAEpC8E,EAAOvF,UAAYD,OAAOyB,OAAO6B,GAC1BkC,GAOTjH,EAAQuH,MAAQ,SAAS/G,GACvB,MAAO,CAAE8E,QAAS9E,IAsEpBwE,EAAsBE,EAAcxD,WACpCW,EAAO6C,EAAcxD,UAAWO,GAAqB,WACnD,OAAOhB,QAETjB,EAAQkF,cAAgBA,EAKxBlF,EAAQwH,MAAQ,SAAS5E,EAASC,EAAS7B,EAAM8B,EAAaqC,QACxC,IAAhBA,IAAwBA,EAAcvE,SAE1C,IAAI6G,EAAO,IAAIvC,EACbvC,EAAKC,EAASC,EAAS7B,EAAM8B,GAC7BqC,GAGF,OAAOnF,EAAQgH,oBAAoBnE,GAC/B4E,EACAA,EAAK7B,OAAO/E,MAAK,SAASwE,GACxB,OAAOA,EAAO1E,KAAO0E,EAAO3E,MAAQ+G,EAAK7B,WAuKjDZ,EAAsBD,GAEtB1C,EAAO0C,EAAI5C,EAAmB,aAO9BE,EAAO0C,EAAIhD,GAAgB,WACzB,OAAOd,QAGToB,EAAO0C,EAAI,YAAY,WACrB,MAAO,wBAkCT/E,EAAQ0H,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAInH,KAAOoH,EACdD,EAAKpB,KAAK/F,GAMZ,OAJAmH,EAAKE,UAIE,SAAShC,IACd,KAAO8B,EAAKb,QAAQ,CAClB,IAAItG,EAAMmH,EAAKG,MACf,GAAItH,KAAOoH,EAGT,OAFA/B,EAAKlF,MAAQH,EACbqF,EAAKjF,MAAO,EACLiF,EAQX,OADAA,EAAKjF,MAAO,EACLiF,IAsCX5F,EAAQ8E,OAASA,EAMjB1B,EAAQ1B,UAAY,CAClByF,YAAa/D,EAEbqD,MAAO,SAASqB,GAcd,GAbA7G,KAAK8G,KAAO,EACZ9G,KAAK2E,KAAO,EAGZ3E,KAAK8C,KAAO9C,KAAK+C,MAAQ1C,EACzBL,KAAKN,MAAO,EACZM,KAAK0C,SAAW,KAEhB1C,KAAKpE,OAAS,OACdoE,KAAKT,IAAMc,EAEXL,KAAKoF,WAAWpB,QAAQsB,IAEnBuB,EACH,IAAK,IAAI3J,KAAQ8C,KAEQ,MAAnB9C,EAAK6J,OAAO,IACZrG,EAAO4C,KAAKtD,KAAM9C,KACjByI,OAAOzI,EAAK8J,MAAM,MACrBhH,KAAK9C,GAAQmD,IAMrB4G,KAAM,WACJjH,KAAKN,MAAO,EAEZ,IACIwH,EADYlH,KAAKoF,WAAW,GACLG,WAC3B,GAAwB,UAApB2B,EAAWtJ,KACb,MAAMsJ,EAAW3H,IAGnB,OAAOS,KAAKmH,MAGdnE,kBAAmB,SAASoE,GAC1B,GAAIpH,KAAKN,KACP,MAAM0H,EAGR,IAAIlF,EAAUlC,KACd,SAASqH,EAAOC,EAAKC,GAYnB,OAXArE,EAAOtF,KAAO,QACdsF,EAAO3D,IAAM6H,EACblF,EAAQyC,KAAO2C,EAEXC,IAGFrF,EAAQtG,OAAS,OACjBsG,EAAQ3C,IAAMc,KAGNkH,EAGZ,IAAK,IAAI1B,EAAI7F,KAAKoF,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ/E,KAAKoF,WAAWS,GACxB3C,EAAS6B,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOqC,EAAO,OAGhB,GAAItC,EAAMC,QAAUhF,KAAK8G,KAAM,CAC7B,IAAIU,EAAW9G,EAAO4C,KAAKyB,EAAO,YAC9B0C,EAAa/G,EAAO4C,KAAKyB,EAAO,cAEpC,GAAIyC,GAAYC,EAAY,CAC1B,GAAIzH,KAAK8G,KAAO/B,EAAME,SACpB,OAAOoC,EAAOtC,EAAME,UAAU,GACzB,GAAIjF,KAAK8G,KAAO/B,EAAMG,WAC3B,OAAOmC,EAAOtC,EAAMG,iBAGjB,GAAIsC,GACT,GAAIxH,KAAK8G,KAAO/B,EAAME,SACpB,OAAOoC,EAAOtC,EAAME,UAAU,OAG3B,KAAIwC,EAMT,MAAM,IAAIvL,MAAM,0CALhB,GAAI8D,KAAK8G,KAAO/B,EAAMG,WACpB,OAAOmC,EAAOtC,EAAMG,gBAU9BjC,OAAQ,SAASrF,EAAM2B,GACrB,IAAK,IAAIsG,EAAI7F,KAAKoF,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ/E,KAAKoF,WAAWS,GAC5B,GAAId,EAAMC,QAAUhF,KAAK8G,MACrBpG,EAAO4C,KAAKyB,EAAO,eACnB/E,KAAK8G,KAAO/B,EAAMG,WAAY,CAChC,IAAIwC,EAAe3C,EACnB,OAIA2C,IACU,UAAT9J,GACS,aAATA,IACD8J,EAAa1C,QAAUzF,GACvBA,GAAOmI,EAAaxC,aAGtBwC,EAAe,MAGjB,IAAIxE,EAASwE,EAAeA,EAAanC,WAAa,GAItD,OAHArC,EAAOtF,KAAOA,EACdsF,EAAO3D,IAAMA,EAETmI,GACF1H,KAAKpE,OAAS,OACdoE,KAAK2E,KAAO+C,EAAaxC,WAClBrC,GAGF7C,KAAK2H,SAASzE,IAGvByE,SAAU,SAASzE,EAAQiC,GACzB,GAAoB,UAAhBjC,EAAOtF,KACT,MAAMsF,EAAO3D,IAcf,MAXoB,UAAhB2D,EAAOtF,MACS,aAAhBsF,EAAOtF,KACToC,KAAK2E,KAAOzB,EAAO3D,IACM,WAAhB2D,EAAOtF,MAChBoC,KAAKmH,KAAOnH,KAAKT,IAAM2D,EAAO3D,IAC9BS,KAAKpE,OAAS,SACdoE,KAAK2E,KAAO,OACa,WAAhBzB,EAAOtF,MAAqBuH,IACrCnF,KAAK2E,KAAOQ,GAGPtC,GAGT+E,OAAQ,SAAS1C,GACf,IAAK,IAAIW,EAAI7F,KAAKoF,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ/E,KAAKoF,WAAWS,GAC5B,GAAId,EAAMG,aAAeA,EAGvB,OAFAlF,KAAK2H,SAAS5C,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACPlC,IAKb,MAAS,SAASmC,GAChB,IAAK,IAAIa,EAAI7F,KAAKoF,WAAWQ,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAId,EAAQ/E,KAAKoF,WAAWS,GAC5B,GAAId,EAAMC,SAAWA,EAAQ,CAC3B,IAAI9B,EAAS6B,EAAMQ,WACnB,GAAoB,UAAhBrC,EAAOtF,KAAkB,CAC3B,IAAIiK,EAAS3E,EAAO3D,IACpB+F,EAAcP,GAEhB,OAAO8C,GAMX,MAAM,IAAI3L,MAAM,0BAGlB4L,cAAe,SAASrC,EAAUf,EAAYE,GAa5C,OAZA5E,KAAK0C,SAAW,CACd3B,SAAU8C,EAAO4B,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhB5E,KAAKpE,SAGPoE,KAAKT,IAAMc,GAGNwC,IAQJ9D,EA9sBM,CAqtBgBD,EAAOC,SAGtC,IACEgJ,mBAAqBzH,EACrB,MAAO0H,GAWmB,kBAAfC,WACTA,WAAWF,mBAAqBzH,EAEhC4H,SAAS,IAAK,yBAAdA,CAAwC5H,K,2CC/uB7B,MAA0B,qCCA1B,MAA0B,0C,OCiB1B6H,IAbG,WACd,OACI,sBAAKnN,UAAU,cAAf,UACI,qBAAKC,IAAKmN,EAAUjN,IAAI,aACxB,sBAAKH,UAAU,mBAAf,mCAC0B,uBAD1B,iBAIA,qBAAKC,IAAKoN,EAAclN,IAAI","file":"static/js/1.cdf42749.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import error from \"./error.gif\";\r\nimport \"./errorMessage.scss\";\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <div className=\"randomchar__error\">\r\n            <img src={error} alt=\"error\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const { process, setProcess, request, clearError } = useHttp();\r\n\r\n    const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n    const _apiKey = \"apikey=7bb779595667b5381fd0ca5c8939611b\";\r\n    const _baseOffset = 0;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    };\r\n\r\n    const getCharacterById = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    };\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    };\r\n\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    };\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    };\r\n\r\n    const _transformCharacter = (char) => {\r\n        const checkLinks = (arrLinks, linkName) => {\r\n            const item = arrLinks.filter((item) => item.type === linkName);\r\n            return !item[0] ? null : item[0].url;\r\n        };\r\n\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n            homepage: checkLinks(char.urls, \"detail\"),\r\n            wiki: checkLinks(char.urls, \"wiki\"),\r\n            comiclink: checkLinks(char.urls, \"comiclink\"),\r\n            comics: char.comics.items,\r\n        };\r\n    };\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            name: comics.title,\r\n            description: !comics.description\r\n                ? \"The character description is missing\"\r\n                : comics.description,\r\n            pages: comics.pageCount,\r\n            language: comics.textObjects.language || \"en-us\",\r\n            price: !comics.prices.price ? \"Not available\" : comics.prices.price,\r\n            thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n            url: comics.urls[0].url,\r\n        };\r\n    };\r\n\r\n    return {\r\n        process,\r\n        setProcess,\r\n        clearError,\r\n        getAllCharacters,\r\n        getCharacterById,\r\n        getCharacterByName,\r\n        getAllComics,\r\n        getComic,\r\n    };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    // Принцип конечного автомата FSM (Finite-state machine)\r\n    const [process, setProcess] = useState(\"waiting\");\r\n\r\n    const request = useCallback(\r\n        // мемоизир ф-ю\r\n        async (\r\n            url,\r\n            method = \"GET\",\r\n            body = null,\r\n            headers = { \"Content-type\": \"application/json\" }\r\n        ) => {\r\n            // перед отправкой запроса активируем спинер\r\n            setProcess(\"loading\");\r\n            // отправляем fetch на сервер\r\n            try {\r\n                const res = await fetch(url, { method, body, headers });\r\n                // проверить результат ответа\r\n                if (!res.ok) {\r\n                    throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n                }\r\n\r\n                const data = await res.json();\r\n                // setProcess(\"confirmed\") - т.к. ф-я async то изменять сост стоит после получения опред данных; ручная установка внутри компонента.\r\n                return data;\r\n            } catch (e) {\r\n                // е - приходит автоматич. из браузера // метод (message) - содерж инфо об ошибке\r\n                throw e;\r\n            }\r\n        },\r\n        []\r\n    );\r\n\r\n    // чтобы перезатереть ошибку (кликом на 'try it')\r\n    const clearError = useCallback(() => {\r\n        setProcess(\"loading\");\r\n    }, []);\r\n\r\n    return { process, setProcess, request, clearError };\r\n};\r\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;"],"sourceRoot":""}